<%
  # Currently defined path prefixes, in JS Regexp format
  #
  _AREAS_RE = '\/(' << %w( inbox res projects users account publish search ).join('|') << ')'

  # Expands to JS code that defines the "area" variable by
  # executing the _AREAS_RE regexp onto the "path_info"
  # property of the "doc" object.
  #
  _GET_AREA = %(
    var match = doc.env.path_info.match (/#{_AREAS_RE}/);
    var area  = match ? match[1] : 'other';
  ).gsub(/\s+/x, ' ').strip
%>

_id     : '_design/basic'
language: 'javascript'
version : '2010110301' # Format: YYYY MM DD VV
views   :
  by_timestamp:
    map: |
      function (doc) {
        if (doc.env)
          emit (doc._id, doc);
      }

  by_date:
    map: |
      function (doc) {
        var date = new Date (parseFloat (doc._id) * 1000);
        emit([date.getFullYear (), date.getMonth (), date.getDay ()], 1);
      }

    reduce: |
      function (keys, values) {
        return sum (values);
      }

  by_user_and_timestamp:
    map: |
      function (doc) {                                        
        if (doc.env)
          emit ([doc.user_id, doc._id], doc);
      }

  res_count:
    map: |
      function (doc) {
        if (doc.env && doc.env.path_info.indexOf ('res/') > 0)
          emit (doc.env.path_info.split ('/')[2], 1);
      }
    reduce: |
      function (keys, values, rereduce) {
        return sum (values);
      }

  res_item_count:
    map: |
      function (doc) {
        if (doc.env && doc.env.path_info.indexOf ('res/') > 0) {
          var pieces = doc.env.path_info.split ('/');
          if (pieces.length > 3)
            emit ([pieces[2], pieces[3]], 1);
        }
      }
    reduce: |
      function (keys, values, rereduce) {
         return sum (values);
      }

  user_res_count:
    map: |
      function (doc) {
        if (doc.env && doc.env.path_info.indexOf ('res/') != -1)
          emit ([doc.user_id, doc.env.path_info.split ('/')[2]], 1);
      }
    reduce: |
      function (keys, values, rereduce) {
        return sum (values);
      }

  user_area_count:
    map: |
      function (doc) {
        if (doc.env) {
          <%= _GET_AREA %>
          emit ([doc.user_id, area], 1);
        }
      }
    reduce: |
      function (keys, values, rereduce) {
        return sum (values);
      }

  area_count:
    map: |
      function (doc) {
        if (doc.env) {
          <%= _GET_AREA %>
          emit (area, 1);
        }
      }
    reduce: |
      function (keys, values, rereduce) {
        return sum (values);
      }

  average_duration_of_path:
    map: |
      function (doc) {
        if (doc.duration)
          emit (doc.env.path_info, doc.duration);
      }
    reduce: |
      function (keys, values){
        return Math.round (sum (values) / values.length);
      }

  average_duration_of_area:
    map: |
      function (doc) {
        if (doc.duration) {
          <%= _GET_AREA %>
          emit (area, doc.duration)
        }
      }
    reduce: |
      function (keys, values){
        return Math.round (sum (values) / values.length);
      }

  by_user_timestamp_area:
    map: |
      function (doc) {
        if (doc.env) {
          <%= _GET_AREA %>
          emit ([doc.user_id, doc._id, area], doc);
        }
      }
